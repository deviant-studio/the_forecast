// Top-level build file where you can add configuration options common to all sub-projects/modules.


buildscript {
    ext.kotlinVersion = '1.0.+'
    repositories {
        jcenter()
        maven { url 'https://repos.zeroturnaround.com/nexus/content/repositories/zt-public-releases' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.1'
        // This does not break the build when Android Studio is missing the JRebel for Android plugin.
        classpath 'com.zeroturnaround.jrebel.android:jr-android-gradle:0.9.+'
        //classpath 'com.android.tools.build:gradle:1.4.0-beta2'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:+'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'com.android.databinding:dataBinder:1.0-rc4'
        classpath 'me.tatarka:gradle-retrolambda:3.2.2'
        classpath 'com.jakewharton.hugo:hugo-plugin:1.2.1'
        //classpath 'com.jakeout:gradle-inspector:+'
    }
}

allprojects {
    repositories {
        jcenter()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        //maven {url "https://clojars.org/repo/"} // icepick
        maven { url 'http://oss.jfrog.org/artifactory/oss-snapshot-local' }

    }
    //apply plugin: 'com.jakeout.gradle-inspector'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


task showClasspath << {
    buildscript.configurations.classpath.each { println it.name }
}

gradle.useLogger(new TimestampEventLogger())

class TimestampEventLogger extends BuildAdapter implements TaskExecutionListener {

    def timestamp = 0L

    public void beforeExecute(Task task) {
        print "> $task.project.name:$task.name "
        timestamp = System.currentTimeMillis()
    }

    public void afterExecute(Task task, TaskState state) {
        def elapsed = (System.currentTimeMillis() - timestamp) / 1000F
        println "[$elapsed]"
    }

    public void buildFinished(BuildResult result) {
        println 'build completed'
        if (result.failure != null) {
            result.failure.printStackTrace()
        }
    }
}
